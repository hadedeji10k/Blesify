let dotenv,cors,express,passport,pkg,env,authRoutes;_2e0‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_2e0‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_2e0‍.w("express",[["default",["express"],function(v){express=v}]]);_2e0‍.w("passport",[["default",["passport"],function(v){passport=v}]]);_2e0‍.w("mongoose",[["default",["pkg"],function(v){pkg=v}]]);_2e0‍.w("./config/environment/index",[["default",["env"],function(v){env=v}]]);_2e0‍.w("./routes/auth.route",[["default",["authRoutes"],function(v){authRoutes=v}]]);// REQUIRE MODULES

dotenv.config()





const { connect } = pkg;




// import serviceRoute from "./routes/services.route"

const app = express();

// EXPRESS MIDDLEWRARES SETUP
app.use(express.urlencoded({ extended: false }));

// To accept JSON objects
app.use(express.json());

// Passport Middleware
app.use(passport.initialize());
// require("./middlewares/passport.js")(passport);


app.use((req, res, next) => {
	res.header('Access-Control-Allow-Origin', '*')
	res.header('Access-Control-Allow-Methods', 'GET, PUT, POST, DELETE')
	res.header(
		'Access-Control-Allow-Headers',
		'Origin, X-Requested-With, Content-Type, Accept, Authorization'
	)
	next()
})

app.options('*', cors())

app.use(
	cors({
		origin: '*',
	})
)

app.use('/api/v1/auth', authRoutes)
// app.use('/api/v1', serviceRoute)

const startServer = async () => {
    try {
        await connect(env.MONGODB.url).then(() => {
            console.log(`Database connected`)
        }).catch(() => {
            console.log(`Database not connected`)
        });
        app.listen(env.PORT || 3001, () => {
            console.log(`Server running on port ${process.env.PORT}`);
        })
    } catch (err) {
        _2e0‍.g.console.log(err);
        startServer()
    }
}

app.get("/", (req, res) => {
    console.log("This is the home route");
    res.send("Welcome to the Home route of The Event App API")
})

startServer()